{"version":3,"sources":["stores/auth.ts","stores/notifications.ts","components/Head/Head.tsx","components/Notifications/Notification.tsx","components/Notifications/Notifications.tsx","providers/app.tsx","features/home/routes/Home.tsx","config/index.ts","utils/storage.ts","lib/axios.ts","stores/imageDetail.ts","types/index.ts","features/images/components/ImageDetail.tsx","features/images/components/Layout.tsx","features/images/routes/Detail.tsx","stores/images.ts","features/images/components/ImageGrid.tsx","features/images/components/OrderBy.tsx","features/images/components/Pagination.tsx","features/images/components/SearchBar.tsx","features/images/components/ImageList.tsx","features/images/routes/List.tsx","features/images/routes/index.tsx","routes/protected.tsx","routes/public.tsx","utils/lazyImport.ts","routes/index.tsx","App.tsx","index.tsx","components/Elements/Spinner/Spinner.tsx","components/Elements/Button/Button.tsx","components/Elements/Link/Link.tsx"],"names":["useAuthStore","create","set","isLoggedIn","isLoading","login","username","password","a","localStorage","setItem","Error","logout","removeItem","storedIsLoggedIn","getItem","setState","initAuthStore","useNotificationStore","notifications","addNotification","notification","state","id","nanoid","dismissNotification","filter","Head","title","description","undefined","defaultTitle","name","content","icons","info","className","aria-hidden","success","warning","error","Notification","type","message","onDismiss","useEffect","timer","setTimeout","clearTimeout","show","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","role","aria-label","onClick","Notifications","aria-live","map","ErrorFallback","window","location","assign","origin","AppProvider","children","fallback","size","FallbackComponent","Home","navigate","useNavigate","API_KEY","process","storagePrefix","storage","getToken","JSON","parse","setToken","token","stringify","clearToken","axios","Axios","baseURL","interceptors","request","use","config","headers","authorization","Accept","response","data","getState","Promise","reject","OrderBy","useImageDetail","imageDetail","getImageDetail","get","hits","ImageDetail","useParams","src","largeImageURL","alt","user","views","Layout","pageHeader","Detail","useImageStore","isSearching","images","searchTerm","page","perPage","totalPages","total","orderBy","popular","setSearchTerm","term","setPage","setOrderBy","getImages","Math","ceil","ImageGrid","image","index","to","tags","clsx","htmlFor","onChange","e","target","value","Pagination","currentPage","handlePageChange","disabled","pageNumbers","startPage","max","floor","visiblePageCount","endPage","showLastDots","push","i","getPageNumbers","pageNumber","SearchBar","handleSearch","inputRef","useRef","React","useState","inputText","setInputText","current","focus","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","placeholder","required","preventDefault","ImageList","searchTermLocal","setSearchTermLocal","searchTimeout","setSearchTimeout","length","timeout","newPage","List","ImageRoutes","path","element","protectedRoutes","factory","AuthRoutes","Object","then","module","default","publicRoutes","AppRoutes","commonRoutes","useRoutes","App","ReactDOM","render","document","getElementById","sizes","sm","md","lg","xl","variants","light","primary","Spinner","variant","data-testid","cx","cy","r","inverse","danger","Button","startIcon","endIcon","props","displayName","Link"],"mappings":"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","file":"static/js/main.2ba1192d.chunk.js","sourcesContent":["import create from 'zustand';\n\ninterface AuthStore {\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport const useAuthStore = create<AuthStore>((set) => ({\n  isLoggedIn: false,\n  isLoading: false,\n  login: async (username, password) => {\n    set({ isLoading: true });\n\n    if (username === 'admin' && password === 'admin') {\n      set({ isLoading: false });\n      set({ isLoggedIn: true });\n      localStorage.setItem('isLoggedIn', 'true');\n    } else {\n      set({ isLoading: false });\n      throw new Error('Invalid credentials');\n    }\n  },\n  logout: () => {\n    set({ isLoggedIn: false });\n    localStorage.removeItem('isLoggedIn');\n  },\n}));\n\nconst initAuthStore = () => {\n  const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n  useAuthStore.setState({ isLoggedIn: storedIsLoggedIn === 'true' });\n};\n\ninitAuthStore();\n","import { nanoid } from 'nanoid';\nimport create from 'zustand';\n\nexport type Notification = {\n  id: string;\n  type: 'info' | 'warning' | 'success' | 'error';\n  title: string;\n  message?: string;\n};\n\ntype NotificationsStore = {\n  notifications: Notification[];\n  addNotification: (notification: Omit<Notification, 'id'>) => void;\n  dismissNotification: (id: string) => void;\n};\n\nexport const useNotificationStore = create<NotificationsStore>((set) => ({\n  notifications: [],\n  addNotification: (notification) =>\n    set((state) => ({\n      notifications: [...state.notifications, { id: nanoid(), ...notification }],\n    })),\n  dismissNotification: (id) =>\n    set((state) => ({\n      notifications: state.notifications.filter((notification) => notification.id !== id),\n    })),\n}));\n","import { Helmet } from 'react-helmet-async';\n\ntype HeadProps = {\n  title?: string;\n  description?: string;\n};\n\nexport const Head = ({ title = '', description = '' }: HeadProps = {}) => {\n  return (\n    <Helmet title={title ? `${title} | Mock Project` : undefined} defaultTitle=\"Mock Project\">\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n","import { Transition } from '@headlessui/react';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  XCircleIcon,\n  InformationCircleIcon,\n} from '@heroicons/react/outline';\nimport { XIcon } from '@heroicons/react/solid';\nimport { Fragment, useEffect } from 'react';\n\nconst icons = {\n  info: <InformationCircleIcon className=\"h-6 w-6 text-blue-500\" aria-hidden=\"true\" />,\n  success: <CheckCircleIcon className=\"h-6 w-6 text-green-500\" aria-hidden=\"true\" />,\n  warning: <ExclamationCircleIcon className=\"h-6 w-6 text-yellow-500\" aria-hidden=\"true\" />,\n  error: <XCircleIcon className=\"h-6 w-6 text-red-500\" aria-hidden=\"true\" />,\n};\n\nexport type NotificationProps = {\n  notification: {\n    id: string;\n    type: keyof typeof icons;\n    title: string;\n    message?: string;\n  };\n  onDismiss: (id: string) => void;\n};\n\nexport const Notification = ({\n  notification: { id, type, title, message },\n  onDismiss,\n}: NotificationProps) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onDismiss(id);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [id, onDismiss]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\n      <Transition\n        show={true}\n        as={Fragment}\n        enter=\"transform ease-out duration-300 transition\"\n        enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n        enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\n        leave=\"transition ease-in duration-100\"\n        leaveFrom=\"opacity-100\"\n        leaveTo=\"opacity-0\"\n      >\n        <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\n          <div className=\"p-4\" role=\"alert\" aria-label={title}>\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0\">{icons[type]}</div>\n              <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                <p className=\"text-sm font-medium text-gray-900\">{title}</p>\n                <p className=\"mt-1 text-sm text-gray-500\">{message}</p>\n              </div>\n              <div className=\"ml-4 flex-shrink-0 flex\">\n                <button\n                  className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  onClick={() => {\n                    onDismiss(id);\n                  }}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Transition>\n    </div>\n  );\n};\n","import { useNotificationStore } from '@/stores/notifications';\n\nimport { Notification } from './Notification';\n\nexport const Notifications = () => {\n  const { notifications, dismissNotification } = useNotificationStore();\n\n  return (\n    <div\n      aria-live=\"assertive\"\n      className=\"z-50 flex flex-col fixed inset-0 space-y-4 items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start\"\n    >\n      {notifications.map((notification) => (\n        <Notification\n          key={notification.id}\n          notification={notification}\n          onDismiss={dismissNotification}\n        />\n      ))}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Button, Spinner } from '@/components/Elements';\nimport { Notifications } from '@/components/Notifications/Notifications';\n\nconst ErrorFallback = () => {\n  return (\n    <div\n      className=\"text-red-500 w-screen h-screen flex flex-col justify-center items-center\"\n      role=\"alert\"\n    >\n      <h2 className=\"text-lg font-semibold\">Ooops, something went wrong !</h2>\n      <Button className=\"mt-4\" onClick={() => window.location.assign(window.location.origin)}>\n        Refresh\n      </Button>\n    </div>\n  );\n};\n\ntype AppProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const AppProvider = ({ children }: AppProviderProps) => {\n  return (\n    <React.Suspense\n      fallback={\n        <div className=\"flex items-center justify-center w-screen h-screen\">\n          <Spinner size=\"xl\" />\n        </div>\n      }\n    >\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <HelmetProvider>\n          <Notifications />\n          <Router>{children}</Router>\n        </HelmetProvider>\n      </ErrorBoundary>\n    </React.Suspense>\n  );\n};\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport { useAuthStore } from '@/stores/auth';\n\nexport const Home = () => {\n  const navigate = useNavigate();\n  const { isLoggedIn } = useAuthStore();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/images');\n    } else {\n      navigate('/auth/login');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return <div> Home Page </div>;\n};\n","export const API_URL = process.env.REACT_APP_API_URL as string;\nexport const API_KEY = process.env.REACT_APP_API_KEY as string;\nexport const JWT_SECRET = '123456' as string;\n","const storagePrefix = 'mock_react_';\n\nconst storage = {\n  getToken: () => {\n    return JSON.parse(window.localStorage.getItem(`${storagePrefix}token`) as string);\n  },\n  setToken: (token: string) => {\n    window.localStorage.setItem(`${storagePrefix}token`, JSON.stringify(token));\n  },\n  clearToken: () => {\n    window.localStorage.removeItem(`${storagePrefix}token`);\n  },\n};\n\nexport default storage;\n","import Axios, { AxiosRequestConfig } from 'axios';\n\nimport { API_URL } from '@/config';\nimport { useNotificationStore } from '@/stores/notifications';\nimport storage from '@/utils/storage';\n\nfunction authRequestInterceptor(config: AxiosRequestConfig) {\n  const token = storage.getToken();\n  if (token) {\n    config.headers.authorization = `${token}`;\n  }\n  config.headers.Accept = 'application/json';\n  return config;\n}\n\nexport const axios = Axios.create({\n  baseURL: API_URL,\n});\n\naxios.interceptors.request.use(authRequestInterceptor);\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const message = error.response?.data?.message || error.message;\n    useNotificationStore.getState().addNotification({\n      type: 'error',\n      title: 'Error',\n      message,\n    });\n\n    return Promise.reject(error);\n  }\n);\n","import { AxiosResponse } from 'axios';\nimport create, { SetState } from 'zustand';\n\nimport { API_KEY } from '@/config';\nimport { axios } from '@/lib/axios';\nimport { Image } from '@/types/index';\n\ntype DataResponse = {\n  total: number;\n  totalHits: number;\n  hits: Image[];\n};\n\ninterface ImageDetail {\n  isLoading: boolean;\n  imageDetail: Image | null;\n  getImageDetail: (id: string) => Promise<void>;\n}\n\nexport const useImageDetail = create<ImageDetail>((set: SetState<ImageDetail>) => ({\n  isLoading: false,\n  imageDetail: null,\n  getImageDetail: async (id: string) => {\n    set({ isLoading: true });\n    const data: AxiosResponse<DataResponse> = await axios.get<\n      DataResponse,\n      AxiosResponse<DataResponse>\n    >(`?id=${id}&key=${API_KEY}`);\n    set({\n      imageDetail: data?.data?.hits[0],\n      isLoading: false,\n    });\n  },\n}));\n","export type BaseEntity = {\n  id: string;\n  createdAt: number;\n};\n\nexport type Image = {\n  id: number;\n  largeImageURL: string;\n  views: number;\n  user: string;\n  tags: string;\n};\n\nexport enum OrderBy {\n  popular = 'popular',\n  latest = 'latest',\n}\n","/* eslint-disable jsx-a11y/no-onchange */\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useParams } from 'react-router-dom';\n\nimport { Spinner } from '@/components/Elements';\nimport { useImageDetail } from '@/stores/imageDetail';\n\nimport './Image.scss';\n\nexport const ImageDetail = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { getImageDetail, imageDetail, isLoading } = useImageDetail();\n\n  useEffect(() => {\n    getImageDetail(id);\n  }, [getImageDetail, id]);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full h-48 flex justify-center items-center\">\n        <Spinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"detail-card\">\n      <button\n        type=\"button\"\n        onClick={() => navigate('/images')}\n        className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\"\n      >\n        {'<'} Back\n      </button>\n      <div className=\"flex justify-center items-center h-screen bg-gray-100 image-wrap\">\n        <div className=\"mx-auto\">\n          <img src={imageDetail?.largeImageURL} alt=\"\" className=\"w-full h-auto img-max-height\" />\n          <div className=\"flex items-center image-detail\">\n            <h1 className=\"text-2xl font-bold my-4\">{imageDetail?.user}</h1>\n            <p className=\"text-gray-500\">Views: {imageDetail?.views}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { Head } from '@/components/Head';\nimport { useAuthStore } from '@/stores/auth';\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  title: string;\n  pageHeader: string;\n};\n\nexport const Layout = ({ children, title, pageHeader }: LayoutProps) => {\n  const { logout } = useAuthStore();\n  return (\n    <>\n      <Head title={title} />\n      <header className=\"bg-gray-800 py-4\">\n        <div className=\"container mx-auto px-4 flex items-center space-between\">\n          <h1 className=\"text-white text-2xl text-center\"> {pageHeader} </h1>\n          <button\n            type=\"button\"\n            onClick={logout}\n            className=\"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\"\n          >\n            Logout\n          </button>\n        </div>\n      </header>\n      <main className=\"flex-grow\">\n        <div className=\"container mx-auto px-4\">{children}</div>\n      </main>\n      <footer className=\"bg-gray-800 py-4\">\n        <div className=\"container mx-auto px-4 text-white text-center\">\n          &copy; 2023 Mock Project. All rights reserved.\n        </div>\n      </footer>\n    </>\n  );\n};\n","import { ImageDetail } from '../components/ImageDetail';\nimport { Layout } from '../components/Layout';\n\nexport const Detail = () => {\n  return (\n    <Layout title=\"Image Detail\" pageHeader=\"Image Detail\">\n      <ImageDetail />\n    </Layout>\n  );\n};\n","import { AxiosResponse } from 'axios';\nimport create, { SetState } from 'zustand';\n\nimport { API_KEY } from '@/config';\nimport { axios } from '@/lib/axios';\nimport { Image, OrderBy } from '@/types/index';\n\ntype DataResponse = {\n  total: number;\n  totalHits: number;\n  hits: Image[];\n};\n\ninterface ImageStore {\n  isLoading: boolean;\n  isSearching: boolean;\n  images: Image[];\n  searchTerm: string;\n  orderBy: OrderBy;\n  page: number;\n  perPage: number;\n  totalPages: number;\n  total: number;\n  setSearchTerm: (term: string) => void;\n  setPage: (page: number) => void;\n  setOrderBy: (orderBy: OrderBy) => void;\n  getImages: () => Promise<void>;\n}\n\nexport const useImageStore = create<ImageStore>((set: SetState<ImageStore>) => ({\n  isLoading: false,\n  isSearching: false,\n  images: [],\n  searchTerm: '',\n  page: 1,\n  perPage: 9,\n  totalPages: 0,\n  total: 0,\n  orderBy: OrderBy.popular,\n  setSearchTerm: (term) => set(() => ({ searchTerm: term, page: 1, isSearching: true })),\n  setPage: (page) => set(() => ({ page, isSearching: false })),\n  setOrderBy: (orderBy) => set(() => ({ orderBy, page: 1, isSearching: false })),\n  getImages: async () => {\n    set({ isLoading: true });\n    const { searchTerm, page, perPage, orderBy } = useImageStore.getState();\n    const data: AxiosResponse<DataResponse> = await axios.get<\n      DataResponse,\n      AxiosResponse<DataResponse>\n    >(`?q=${searchTerm}&page=${page}&per_page=${perPage}&order=${orderBy}&key=${API_KEY}`);\n    set({\n      images: data?.data?.hits,\n      totalPages: Math.ceil(data?.data?.total / perPage),\n      total: data?.data?.total,\n      isLoading: false,\n    });\n  },\n}));\n","import React from 'react';\n\nimport { Link } from '@/components/Elements';\nimport { Image } from '@/types';\n\ninterface ImageGridProps {\n  images: Image[];\n}\n\nconst ImageGrid: React.FC<ImageGridProps> = ({ images }) => {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 image-list\">\n      {images.map((image, index) => (\n        <Link key={index} to={`/images/${image.id}`}>\n          <img\n            src={image.largeImageURL}\n            alt={image.tags}\n            className=\"w-full h-full object-cover image-item\"\n          />\n          <h3 className=\"text-lg font-bold mt-2\">by: {image.user}</h3>\n          <p className=\"text-gray-500\">views: {image.views}</p>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","/* eslint-disable jsx-a11y/no-onchange */\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { OrderBy as OrderByEnum } from '@/types';\n\ntype ListProps = {\n  className: string;\n  orderBy: OrderByEnum;\n  setOrderBy: (orderBy: OrderByEnum) => void;\n};\n\nconst OrderBy: React.FC<ListProps> = ({ className, orderBy, setOrderBy }) => {\n  const handleOnChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setOrderBy(e.target.value as OrderByEnum);\n  };\n  return (\n    <div className={clsx('flex justify-between items-center order-by', className)}>\n      <label\n        htmlFor=\"countries\"\n        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white order-label\"\n      >\n        Order By\n      </label>\n      <select\n        id=\"countries\"\n        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 select-box\"\n        onChange={handleOnChange}\n        value={orderBy}\n      >\n        <option value=\"popular\"> Popular </option>\n        <option value=\"latest\"> Latest </option>\n      </select>\n    </div>\n  );\n};\n\nexport default OrderBy;\n","import React from 'react';\n\ntype ListProps = {\n  currentPage: number;\n  perPage: number;\n  totalPages: number;\n  total: number;\n  handlePageChange: (page: number) => void;\n};\n\nconst Pagination: React.FC<ListProps> = ({\n  total,\n  currentPage,\n  perPage,\n  totalPages,\n  handlePageChange,\n}) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const visiblePageCount = 3;\n\n    let startPage = Math.max(1, currentPage - Math.floor(visiblePageCount / 2));\n    let endPage = startPage + visiblePageCount - 1;\n\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = Math.max(1, endPage - visiblePageCount + 1);\n    }\n\n    const showFirstDots = startPage > 1;\n    const showLastDots = endPage < totalPages;\n\n    if (showFirstDots) {\n      pageNumbers.push(1);\n      pageNumbers.push(2);\n      pageNumbers.push('...');\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(i);\n    }\n\n    if (showLastDots) {\n      pageNumbers.push('...');\n      pageNumbers.push(totalPages - 1);\n      pageNumbers.push(totalPages);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className=\"flex justify-between items-center flex-col md:flex-row mock-pagination\">\n      <div>\n        <p className=\"text-sm text-gray-700\">\n          Showing <span className=\"font-medium\">{(currentPage - 1) * perPage + 1}</span> to{' '}\n          <span className=\"font-medium\">{currentPage * perPage + 1}</span> of{' '}\n          <span className=\"font-medium\">{total}</span> results\n        </p>\n      </div>\n      <div className=\"flex pagination\">\n        <button\n          disabled={currentPage === 1}\n          className=\"flex items-center justify-center px-4 h-10 ml-3 text-base font-medium bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n          onClick={() => handlePageChange(1)}\n        >\n          First\n        </button>\n        <button\n          disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n          className=\"flex items-center justify-center px-4 h-10 ml-3 text-base font-medium bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n          type=\"button\"\n        >\n          Previous\n        </button>\n        {getPageNumbers().map((pageNumber) => (\n          <button\n            key={pageNumber}\n            disabled={currentPage === pageNumber}\n            className=\"flex items-center justify-center px-4 h-10 ml-3 text-base font-medium bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n            onClick={() => handlePageChange(pageNumber as number)}\n          >\n            {pageNumber}\n          </button>\n        ))}\n\n        <button\n          disabled={currentPage === totalPages}\n          onClick={() => handlePageChange(currentPage + 1)}\n          className=\"flex items-center justify-center px-4 h-10 ml-3 text-base font-medium bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n          type=\"button\"\n        >\n          Next\n        </button>\n\n        <button\n          disabled={currentPage === totalPages}\n          onClick={() => handlePageChange(totalPages)}\n          className=\"flex items-center justify-center px-4 h-10 ml-3 text-base font-medium bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n          type=\"button\"\n        >\n          Last\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import clsx from 'clsx';\nimport React, { useRef, useEffect } from 'react';\n\ntype ListProps = {\n  className?: string;\n  isSearching: boolean;\n  searchTerm: string;\n  handleSearch: (term: string) => void;\n};\n\nconst SearchBar: React.FC<ListProps> = ({ className, isSearching, searchTerm, handleSearch }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [inputText, setInputText] = React.useState<string>('');\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(e.target.value);\n    handleSearch(e.target.value);\n  };\n\n  const onSubmit = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    handleSearch(inputText);\n  };\n\n  useEffect(() => {\n    if (isSearching) {\n      setInputText(searchTerm);\n      inputRef.current?.focus();\n    } else {\n      setInputText(searchTerm);\n    }\n  }, [isSearching, searchTerm]);\n\n  return (\n    <div className={clsx(className)}>\n      <form className=\"search\">\n        <label\n          htmlFor=\"default-search\"\n          className=\"mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white\"\n        >\n          Search\n        </label>\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n            <svg\n              className=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\n              aria-hidden=\"true\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\n              />\n            </svg>\n          </div>\n          <input\n            type=\"search\"\n            value={inputText}\n            onChange={onSearchChange}\n            id=\"default-search\"\n            ref={inputRef}\n            className=\"block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n            placeholder=\"Search images...\"\n            required\n          />\n          <button\n            type=\"submit\"\n            onClick={onSubmit}\n            className=\"text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/* eslint-disable jsx-a11y/no-onchange */\nimport { useEffect, useState } from 'react';\n\nimport { Spinner } from '@/components/Elements';\nimport { useImageStore } from '@/stores/images';\n\nimport ImageGrid from './ImageGrid';\nimport OrderBy from './OrderBy';\nimport Pagination from './Pagination';\nimport SearchBar from './SearchBar';\n\nimport './Image.scss';\n\nexport const ImageList = () => {\n  const {\n    getImages,\n    images,\n    isLoading,\n    page,\n    totalPages,\n    total,\n    perPage,\n    setPage,\n    searchTerm,\n    setSearchTerm,\n    isSearching,\n    orderBy,\n    setOrderBy,\n  } = useImageStore();\n  const [searchTermLocal, setSearchTermLocal] = useState<string>('');\n  const [searchTimeout, setSearchTimeout] = useState<NodeJS.Timeout | null>(null);\n  const TIME_OUT = 500;\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleSearch = (term: string) => {\n    setSearchTerm(term);\n    if (searchTimeout) {\n      clearTimeout(searchTimeout);\n    }\n\n    const timeout = setTimeout(() => {\n      setSearchTermLocal(term);\n    }, TIME_OUT);\n\n    setSearchTimeout(timeout);\n  };\n\n  useEffect(() => {\n    getImages();\n  }, [searchTermLocal, orderBy, page, getImages]);\n\n  if (!images.length) return null;\n\n  return (\n    <div className=\"list\">\n      <div className=\"flex justify-between items-center flex-col md:flex-row\">\n        <SearchBar\n          isSearching={isSearching}\n          searchTerm={searchTerm}\n          handleSearch={handleSearch}\n          className=\"flex-1\"\n        />\n        <OrderBy className=\"flex-1\" orderBy={orderBy} setOrderBy={setOrderBy} />\n      </div>\n      {isLoading ? (\n        <div className=\"w-full h-48 flex justify-center items-center\">\n          <Spinner size=\"lg\" />\n        </div>\n      ) : (\n        <ImageGrid images={images} />\n      )}\n      <Pagination\n        total={total}\n        currentPage={page}\n        perPage={perPage}\n        totalPages={totalPages}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n","import { ImageList } from '../components/ImageList';\nimport { Layout } from '../components/Layout';\n\nexport const List = () => {\n  return (\n    <Layout title=\"List Images\" pageHeader=\"List Images\">\n      <ImageList />\n    </Layout>\n  );\n};\n","import { Route, Routes, Navigate } from 'react-router-dom';\n\nimport { useAuthStore } from '@/stores/auth';\n\nimport { Detail } from './Detail';\nimport { List } from './List';\n\nexport const ImageRoutes = () => {\n  const { isLoggedIn } = useAuthStore();\n  if (!isLoggedIn) {\n    return <Navigate to=\"/auth/login\" />;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/:id\" element={<Detail />} />\n      <Route path=\"/\" element={<List />} />\n    </Routes>\n  );\n};\n","import { ImageRoutes } from '@/features/images';\n\nexport const protectedRoutes = [\n  {\n    path: '/images/*',\n    element: <ImageRoutes />,\n  },\n];\n","import { lazyImport } from '@/utils/lazyImport';\n\nconst { AuthRoutes } = lazyImport(() => import('@/features/auth'), 'AuthRoutes');\n\nexport const publicRoutes = [\n  {\n    path: '/auth/*',\n    element: <AuthRoutes />,\n  },\n];\n","import * as React from 'react';\n\n// named imports for React.lazy: https://github.com/facebook/react/issues/14603#issuecomment-726551598\nexport function lazyImport<\n  T extends React.ComponentType<any>,\n  I extends { [K2 in K]: T },\n  K extends keyof I\n>(factory: () => Promise<I>, name: K): I {\n  return Object.create({\n    [name]: React.lazy(() => factory().then((module) => ({ default: module[name] }))),\n  });\n}\n\n// Usage\n// const { Home } = lazyImport(() => import(\"./Home\"), \"Home\");\n","import { useRoutes } from 'react-router-dom';\n\nimport { Home } from '@/features/home';\n\nimport { protectedRoutes } from './protected';\nimport { publicRoutes } from './public';\n\nexport const AppRoutes = () => {\n  const commonRoutes = [{ path: '/', element: <Home /> }];\n\n  const element = useRoutes([...publicRoutes, ...protectedRoutes, ...commonRoutes]);\n\n  return <>{element}</>;\n};\n","import { AppProvider } from '@/providers/app';\nimport { AppRoutes } from '@/routes';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <AppRoutes />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import clsx from 'clsx';\n\nconst sizes = {\n  sm: 'h-4 w-4',\n  md: 'h-8 w-8',\n  lg: 'h-16 w-16',\n  xl: 'h-24 w-24',\n};\n\nconst variants = {\n  light: 'text-white',\n  primary: 'text-blue-600',\n};\n\nexport type SpinnerProps = {\n  size?: keyof typeof sizes;\n  variant?: keyof typeof variants;\n  className?: string;\n};\n\nexport const Spinner = ({ size = 'md', variant = 'primary', className = '' }: SpinnerProps) => {\n  return (\n    <>\n      <svg\n        className={clsx('animate-spin', sizes[size], variants[variant], className)}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        data-testid=\"loading\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n      <span className=\"sr-only\">Loading</span>\n    </>\n  );\n};\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { Spinner } from '@/components/Elements/Spinner';\n\nconst variants = {\n  primary: 'bg-blue-600 text-white',\n  inverse: 'bg-white text-blue-600',\n  danger: 'bg-red-600 text-white',\n};\n\nconst sizes = {\n  sm: 'py-2 px-4 text-sm',\n  md: 'py-2 px-6 text-md',\n  lg: 'py-3 px-8 text-lg',\n};\n\ntype IconProps =\n  | { startIcon: React.ReactElement; endIcon?: never }\n  | { endIcon: React.ReactElement; startIcon?: never }\n  | { endIcon?: undefined; startIcon?: undefined };\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant?: keyof typeof variants;\n  size?: keyof typeof sizes;\n  isLoading?: boolean;\n} & IconProps;\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      type = 'button',\n      className = '',\n      variant = 'primary',\n      size = 'md',\n      isLoading = false,\n      startIcon,\n      endIcon,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n        className={clsx(\n          'flex justify-center items-center border border-gray-300 disabled:opacity-70 disabled:cursor-not-allowed rounded-md shadow-sm font-medium focus:outline-none hover:opacity-80',\n          variants[variant],\n          sizes[size],\n          className\n        )}\n        {...props}\n      >\n        {isLoading && <Spinner size=\"sm\" className=\"text-current\" />}\n        {!isLoading && startIcon}\n        <span className=\"mx-2\">{props.children}</span> {!isLoading && endIcon}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n","import clsx from 'clsx';\nimport { Link as RouterLink, LinkProps } from 'react-router-dom';\n\nexport const Link = ({ className, children, ...props }: LinkProps) => {\n  return (\n    <RouterLink className={clsx('text-indigo-600 hover:text-indigo-900', className)} {...props}>\n      {children}\n    </RouterLink>\n  );\n};\n"],"sourceRoot":""}